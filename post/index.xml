<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on SimonHux Blog</title>
    <link>https://simonhux.com/post/</link>
    <description>Recent content in Posts on SimonHux Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 31 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://simonhux.com/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>本博客的折腾史</title>
      <link>https://simonhux.com/p/%E6%9C%AC%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%8A%98%E8%85%BE%E5%8F%B2/</link>
      <pubDate>Wed, 31 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://simonhux.com/p/%E6%9C%AC%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%8A%98%E8%85%BE%E5%8F%B2/</guid>
      <description>起因 原博客 rainsimon.top 建立于 2020年 3月，但 9月后再无更新了
 
偶然间看别人的用 Hugo 构建博客,于是时隔一年才有了本站的产生。
经过 开始折腾 1、搭建服务  根据官方文档快速上手：QuickStart 本博客采用的主题：Stack 主题的配置及使用指南：参考文档  2、遇到的问题 2.1 什么是 Open Graph 标签 在主题的配置文件中有一行 opengraph, 并不了解这是做什么的
 Open Graph Protocol（开放图谱协议），简称 OG 协议或 OGP。它是 Facebook 在 2010 年 F8 开发者大会公布的一种网页元信息（Meta Information）标记协议，属于 Meta Tag （Meta 标签）的范畴，是一种为社交分享而生的 Meta 标签。
 根据以上内容可以断定，是为了优化SEO，并且是针对社交平台的优化。 带有OG标签的内容分享后的效果也比不带的好 会展示缩略图 。
2.2 什么是 Front-Matter 1 2 3 4 5 6  --- title: tags date: 2019-08-13 09:39:50 type: tags layout: tag ---   Front-Matter 就是.</description>
    </item>
    
    <item>
      <title>从零开始搭建 Go 语言开发环境</title>
      <link>https://simonhux.com/p/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA-go-%E8%AF%AD%E8%A8%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://simonhux.com/p/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA-go-%E8%AF%AD%E8%A8%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid>
      <description>开发环境 下载 下载地址 Go官网下载地址：https://golang.org/dl/
Go官方镜像站（推荐）：https://golang.google.cn/dl/
版本的选择 Windows 平台和 Mac 平台推荐下载可执行文件版，Linux 平台下载压缩文件版。
安装 Windows 下安装 此安装实例以 64位 Win10系统安装 Go 1.15.1可执行文件版本为例。
将上一步选好的安装包下载到本地。
双击下载好的文件，然后按照下图的步骤安装即可。
Linux 下安装 我们在版本选择页面选择并下载好go1.15.1.linux-amd64.tar.gz文件：
1  curl -O https://studygolang.com/dl/golang/go1.15.linux-amd64.tar.gz   将下载好的文件解压到/usr/local目录下：
1  sudo tar -C /usr/local -xzf go1.15.linux-amd64.tar.gz # 解压   配置环境变量： Linux下有两个文件可以配置环境变量
其中/etc/profile是对所有用户生效的；$HOME/.profile是对当前用户生效的，根据自己的情况自行选择一个文件打开，添加如下两行代码，保存退出。
1 2  export GOROOT=/usr/local/go export PATH=$PATH:$GOROOT/bin   修改/etc/profile后要重启生效，修改$HOME/.profile后使用source命令加载$HOME/.profile文件即可生效。 检查：
1 2  ~ go version go version go1.15.1 linux/amd65   Mac 下安装 下载可执行文件版，直接点击下一步安装即可，默认会将go安装到/usr/local/go目录下。</description>
    </item>
    
    <item>
      <title>曹政文章目录</title>
      <link>https://simonhux.com/p/%E6%9B%B9%E6%94%BF%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95/</link>
      <pubDate>Sat, 13 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://simonhux.com/p/%E6%9B%B9%E6%94%BF%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95/</guid>
      <description>谁是曹政？ 冯大辉说(知乎)：
 认识曹政之后，感觉互联网终于入门了 :) 数据、技术、业务，无一不精。我的偶像。
 曹政的知识星球 除了微信公众号，caoz还在另外两个渠道分享一些在公众号里面不方便说的话题：
曹政的电报群telegram
曹政公众号文章： 为了方便研读与学习，将“caoz 的梦呓”（微信号：caozsay）公众号里面的所有文章整理成目录：
 【2017-12-22】听说有人谋求稳定的工作？ 【2017-12-19】谈谈共识算法 【2017-12-16】如何快速有效阅读 【2017-12-13】区块链装逼指南 【2017-12-11】谈谈产品与运营之 - 润物细无声 【2017-12-08】合规羊毛党小贴士，谈谈award caculator 【2017-12-04】走马观花看印尼 【2017-12-02】有些钱，即便不脏，但也有毒。 【2017-11-30】所谓”看棋高三段” 【2017-11-27】谈谈赚钱的套路 - 敏锐，决断及行动 【2017-11-23】感谢一路有你 【2017-11-20】面具之下的真相 【2017-11-18】分享即学习 【2017-11-15】谈谈比特币分叉 【2017-11-14】谈谈特权用户 【2017-11-10】谈谈企业福利 【2017-11-07】游戏是怎么赚钱的 - 迫不及待 【2017-11-04】从“自相矛盾”的一些问题来谈谈认知 【2017-11-01】谈谈产品与运营之 - 什么是用户感知 【2017-10-27】谈谈赚钱的套路 - 消费冲动与消费信心。 【2017-10-25】企业面试需要几轮 【2017-10-23】关于Alphago zero，是的，我来跟风了 【2017-10-21】巨头垄断下的创业机会 【2017-10-18】面对学习，心存敬畏 【2017-10-16】人生的选择题和证明题 【2017-10-13】创业与投资 -谈谈融资这个事儿（下） 【2017-10-09】创业与投资 - 谈谈融资这个事儿（上） 【2017-10-05】共享经济的黄昏 【2017-10-03】不是所有成功都值得尊重 【2017-09-29】谈谈免费开源的知识产权话题 【2017-09-27】当我们谈战略，我们究竟在谈什么？ 【2017-09-23】创业者的噩梦 -商业竞争究竟有多残酷和黑暗 【2017-09-20】有些答案，写出来其实蛮简单。 【2017-09-17】霸王条款，新浪你担得起责么？ 【2017-09-15】你还在寻找解决方案，别人已经颠覆了问题。 【2017-09-14】从大企业常见的自嗨谈起 【2017-09-12】我们都缺了一门必修课 【2017-09-09】到底什么是割韭菜 【2017-09-07】从一个独角兽的诞生说起 【2017-09-05】关于UGC的数据隐私和所有权 【2017-09-03】广告投手的江湖 【2017-08-30】小程序的红利期 【2017-08-29】共识即财富 【2017-08-26】负成本营销 【2017-08-24】从权力的游戏谈用户画像 【2017-08-21】谈谈移民这点事 【2017-08-20】阿法狗之后的围棋世界 【2017-08-17】谈谈用户画像 【2017-08-15】割不完的韭菜 【2017-08-13】你会清理联系人么？ 【2017-08-10】致那些“聪明”的读者 【2017-08-09】你相信大爱无疆么？ 【2017-08-06】手机是用来干嘛的？ 【2017-08-04】好好说话 【2017-08-02】怎么发现赚钱的套路 【2017-07-31】谈谈赌博的套路 【2017-07-29】关于知识付费，是的，我就是来砸场子的。 【2017-07-26】小密圈因技术原因暂停服务 【2017-07-24】谈谈用户体验与风控的平衡性 【2017-07-21】江湖人称破锣糕 【2017-07-19】扼杀创业的理想主义 【2017-07-17】见微知著，从小需求里看产品的抉择和定位 【2017-07-14】我的第一堂正式网课 【2017-07-11】天使投资，众筹与项目背书 【2017-07-10】如何管理和指挥你的上司 【2017-07-07】这是一篇广告，只限技术人员浏览 【2017-07-06】再谈创业者的价值观 【2017-07-04】谈谈消费升级 【2017-07-02】从技术到管理 【2017-07-01】读书笔记，满篇心理学家的吐槽 【2017-06-28】前人挖坑，后人仆街 【2017-06-13】封笔两周保平安 【2017-06-08】暴走欧洲之 为信仰买单 【2017-06-07】从校园到职场 - 技能与职位 【2017-06-05】一个羊毛党的自白 【2017-06-03】alphago 50盘自战棋谱的简单解读 【2017-06-01】互联网世界的神奇逻辑 【2017-05-31】暴走欧洲之文明的迭代 【2017-05-30】从大数据+AI 谈谈概念与场景 【2017-05-27】暴走欧洲之旅行的经验杂记 【2017-05-24】是的，柯洁输了，然而又怎样。 【2017-05-23】比输更可怕，写在人机大战之前 【2017-05-21】暴走欧洲之在德国的反思 【2017-05-19】暴走欧洲之流水账 【2017-05-15】信息安全，别为了芝麻丢了西瓜。 【2017-05-10】系统优化的前提是应用场景 【2017-05-09】从空空狐谈信用卡套利 【2017-05-07】中东出海浅谈 【2017-05-05】走马观花看迪拜 【2017-04-30】谈谈社区的用户增长 【2017-04-28】谈谈编程 之 滥用内存的现象 【2017-04-25】当我们追求不可替代。。。 【2017-04-23】我知道你不想交智商税 【2017-04-20】创业者的噩梦 - 人与人的信任呢？ 【2017-04-19】微信赞赏与苹果税 【2017-04-18】该来的总会来 - 谈谈小程序的这次升级 【2017-04-17】创业者的噩梦 - 该我的钱怎么拿不到？ 【2017-04-15】高危！新一波Windows 0day攻击泄露.</description>
    </item>
    
    <item>
      <title>轻型 NAS &#43; OpenWrt 组合</title>
      <link>https://simonhux.com/p/%E8%BD%BB%E5%9E%8B-nas-openwrt-%E7%BB%84%E5%90%88/</link>
      <pubDate>Sun, 03 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://simonhux.com/p/%E8%BD%BB%E5%9E%8B-nas-openwrt-%E7%BB%84%E5%90%88/</guid>
      <description>前言  如果愿意用隐私来交换便捷性或者效率的话，很多情况下他们是愿意这么做的。
​	——百度·李彦宏
 NAS全称 Network Attached Storage ，字面意思是：网络附加存储，说白话就是一台属于自己私人去中心化服务器，可以存储音乐、电影、照片等数据，可以做网盘，能做远程下载，能做影音服务器等等等你想让NAS做任何你想解决的方案。相对于家用主机①更低的功耗②24小时待机，两个特点。成熟的NAS产品像群晖、威联通可能二三十瓦功耗，低功耗硬件DIY黑群晖30瓦到40瓦不等。如果你对瓦数没什么概念，电视机顶盒的功耗一般15瓦左右，笔记本大约60 瓦左右。低功耗主要还是在省电方面实在。
NAS 最大的特性是去中心化，我们用NAS寻找解决方案的目的是为了掌控自己所产生的信息化数据，对数据拥有绝对的处决权，而不是追求数据的安全性。
不好理解举个例子：你买一辆电动车，你可以任意处置它。你想明天骑明天就一定能骑，没有人能约束你。但你没法保证今晚窃·格瓦拉他不会来光顾你家院子，所以你对安全性没法保障。但是没了处决权，比如共享单车运营商只要明天他不然你骑，你就百分之百骑不了。
再回到安全，信息化安全它是一个相对概念。任何数据只要信息化都百分百不安全，举个例子，密码管理器LastPass，把所有密码都放在服务端。好比把全部鸡蛋放在一个篮子里。去中心化考虑的是处置权，而不是安全性。此处恰好引用百度·李彦宏，在2018年3月中国高层发展论坛所讲述的那句话。
此篇文章并非是 UNRAID、OpenMediaVault（OMV） 、FreeNAS等 NAS 系统，而是在 Linux 下一套可行性解决方案，其中斐讯 N1 满载6瓦左右，我家云满载10瓦左右
关于 关于配置 关于固件选择 N1：Armbian 我家云：OpenWrt
“反向操作”？并没有。从配置上看，我家云更适合组 NAS（OMV），挂硬盘，速率也高。但众所周知，我家云也叫掉盘云。硬盘用着用着会突然掉线，系统识别不到硬盘。掉盘是需要通过硬改才可以解决，参考F大：我家云硬盘供电的三个BUG（掉盘的主要元凶）如是是用 FTP 进行文件传输发热量大且噪音也是非常大。如果是拆掉外壳，可体验风扇噪音最大化。
N1，安装过几次 OMV，参考书生86，Armbian 成功安装 OMV5 方法，但都失败了。退而求其次，选择 Armbian 系统安装 Docker 容器。 N1 也是散热问题，在某些环境下 CPU 最高达到48℃，但相比我家云没有噪音。
N1是在同时跑5个 Docker 容器 47℃，而我家云只跑了一个 OpenWrt 就 46℃
斐讯 N1 篇 镜像：Armbian_20.02.0_Aml-s9xxx_buster_5.4.28-amlogic-flippy-32+.img
Docker：Portainer、File Browser、Aria2、Nginx
移动硬盘：斐讯 H1 外壳+ HTS725050A7E630 500G
N1刷入 armbian 和安装 Docker 不再此赘述，详细请查看最“不正经”的盒子斐讯 N1</description>
    </item>
    
    <item>
      <title>OpenWrt 旁路由模式</title>
      <link>https://simonhux.com/p/openwrt-%E6%97%81%E8%B7%AF%E7%94%B1%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Wed, 08 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://simonhux.com/p/openwrt-%E6%97%81%E8%B7%AF%E7%94%B1%E6%A8%A1%E5%BC%8F/</guid>
      <description>前言 在Docker安装OpenWrt文中只是粗略提到旁路由设置，并没有深入探讨OpenWrt旁路由是如何进行设置。此文以四种方案去探讨旁路由模式与分析，祝君玩的开心
总体介绍 下文【旁路由】代指旁路由设备，如N1，PI
新手入手建议: 方案1 &amp;gt; 方案2
根据自己网络需求，选择适合的方案。
同时先以方案1为基础，逐步熟悉与学习 旁路由设置。避免一下子设置全面崩溃。
方案1 :(新手建议) 个体设备，通过设置 【旁路由】 为网关， 独自通过 【旁路由】 上网
 应用场景  个别PC﹑个别手机需要通过 【旁路由】 上网，其他设备不需要   优点  学习简单，折腾旁路由时，不影响其他人上网 私密性，能够规限 特定设备以旁路由模式上网   缺点  面对多设备，每个设备都需单独设置    方案2 :(不动光猫设置方法) 【旁路由】 接上路由后， 【旁路由】强制接管 dhcp，主路由不需设置ip
当拔除 【旁路由】 并重启路由后，主路由接管重新dhcp
 应用场景  家中所有设备都有需要 (包括有线/Wifi) ，访客手机通过 Wifi 亦可以   优点  学习相较容易，不会更改原网络设备的设置 适应性强 ， 能够不动光猫﹑路由器下设置成功 全局性， 旁路由强制接管DHCP下，内网设备都以旁路由模式上网 更换模式容易，拔除旁路由并重启路由后，内网设备恢复原来网络模式   缺点  相对方案一，需要更多学习时间。 有些主路由强势不让接管    具体教程 方案1 (新手建议)  N1刷机后，在网络—接口—LAN处修改  协议选择静态地址 IPV4填入与主路由相同网段（不冲突即可，这个地址就是进入OpenWrt管理界面地址） 网关填写成主路由IP DNS填写成主路由IP 底部DHCP服务器勾选忽略此接口 IPV6设置有选项的地方改成停用 其他默认并保存，保存&amp;amp;应用    需要连接N1使用的设备IP填写成主路由相同网段（不冲突即可），网关和DNS填写成N1的IP即可，同理DNS可以填写多个  示例：       方案2 (不动光猫设置方法) 示例：</description>
    </item>
    
    <item>
      <title>Docker 安装 OpenWrt</title>
      <link>https://simonhux.com/p/docker-%E5%AE%89%E8%A3%85-openwrt/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://simonhux.com/p/docker-%E5%AE%89%E8%A3%85-openwrt/</guid>
      <description>前言 斐讯N1装好了Armbian和Docker，接下来就要发挥Docker性能所在。在Docker里安装软路由系统 OpenWrt
另外此篇文章也适合于主路由是TP-Link、磊科、水星等主流路由器用户
大体流程 把大象放进冰箱需要几步？1.开冰箱、2.放大象、3.关冰箱
把长颈鹿放进冰箱要几步？1.开冰箱、2.把大象从冰箱拿出来、3.把长颈鹿放进去、4.关冰箱
部署Docker版OP要几步？ 1.导入op、2.开启网卡的混杂模式、3.载入pppoe模块、4.创建docker的虚拟网络、5.开启OpenWrt容器
安装OpenWrt 下载OpenWrt镜像 镜像：Armbian，flippy大神版
导入OpenWrt文件 登录armbian的ssh，把tar.gz后缀的镜像文件拖入到root目录下
注意查看文件大小，如果不是0KB就拖入成功，如果拖入失败，可换另一个ssh工具拖入
请先看附加说明与注意再来操作以下五句命令，以免发生错误
创建OpenWrt镜像 docker import openwrt-armvirt-64-default-rootfs.tar.gz openwrt:R9.1.20
开启网卡的混杂模式 ip link set eth0 promisc on
载入pppoe模块 modprobe pppoe
创建docker的虚拟网络（OpenWrt网络） docker network create -d macvlan &amp;ndash;subnet=192.168.0.0/24 &amp;ndash;gateway=192.168.0.1 -o parent=eth0 macnet
开启OpenWrt容器 docker run &amp;ndash;restart always -d &amp;ndash;network macnet &amp;ndash;privileged openwrt:R9.1.20 /sbin/init
👉 附加说明与注意  第一条命令解释：docker import+文件名称+镜像名称:标签，标签R9.1.11可自定义，可以改为版本号或者日期 第四条命令：subnet=192.168.0.0/24和gateway=192.168.0.1第三位改为你的主路由，如你的主路由是192.168.123.0，那么这里的两个0改为你主路由的123 第五条命令：OpenWrt:R9.1.20要与第一条语句后面OpenWrt:R9.1.20一致 以后更换op版本时，2、3、4命令可不用重复执行，执行过一次即可，除非是重新刷机  设置OpenWrt 登录portainer管理页面，点container找到你的OpenWrt容器(Image为OpenWrt:R9.1.20或者你设置的)，设置OpenWrt
修改network设置   在bash界面输入vi /etc/config/network命令
  按i修改网关信息   按图所示，修改好你进行OpenWrtip地址与你的主路由ip地址</description>
    </item>
    
    <item>
      <title>最“不正经”的盒子 斐讯N1</title>
      <link>https://simonhux.com/p/%E6%9C%80%E4%B8%8D%E6%AD%A3%E7%BB%8F%E7%9A%84%E7%9B%92%E5%AD%90-%E6%96%90%E8%AE%AFn1/</link>
      <pubDate>Sun, 05 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://simonhux.com/p/%E6%9C%80%E4%B8%8D%E6%AD%A3%E7%BB%8F%E7%9A%84%E7%9B%92%E5%AD%90-%E6%96%90%E8%AE%AFn1/</guid>
      <description>前言 斐讯N1面世时是以家庭NAS系统和矿机的产品出现的，结果由于NAS软件性能弱，挖矿又因为一些原因服务挂掉，导致一度沦为吃灰的垃圾。 而之后在大神webpad破解了bootloader之后，N1可以刷机了，这样就摆脱了之前没有服务的NAS系统，可玩性和自由性大大增加。
monokind大神通过绕过N1的加密增加了对CoreELEC的支持，CoreELEC的轻便化多媒体方案，让N1摇身一变成为一台专门的蓝光视频播放器，不光可以有海报墙和自动字幕匹配，还可以安装youtube（油管）和netflix（奈飞）插件，直接播放这两个平台的视频。
再之后荒野无灯大神的小钢炮系统、万能游戏机EmuELEC系统、全功能的Armbian Linux系统、flippy大神编译的openwrt接踵而来。
附一张斐讯N1参数 N1使用晶晨Amlogic S905D为主芯片。
S905D芯片属于S905系列的最高阶芯片，采用ARM Cortex-A53架构，四核 1.5GHz的CPU
GPU为5核ARM Mali-450，支持4K@60fps H265/VP9 10bit硬件解码，支持HDR10和HLG HDR。
2G RAM，8G ROM，支持千兆有线和5G无线
准备工作 工欲善其事，必先利其器
硬件装备  N1 电脑 路由器 U盘（TF卡+读卡器8G以上） 网线 键盘 HDMI线、HDMI显示器（如没有HDMI显示器可用VGA转HDMI线进行转接）  软件准备  镜像：Armbian，flippy大神版 写盘工具：BalenaEtcher SSH工具：FinalShell  降级 如已把armbian或者openwrt 或者小钢炮或者coreecle刷入N1的EMMC，这种情况无需降级
如果是新的N1未经任何操作，请先降级处理
降级请参考：webpad降级教程或者三千问N1降级教程
制作 Armbian 的U盘系统 把 U 盘插到电脑，把下载好的 Armbian 镜像解压，把img文件拖入Etcher中，选择好U盘，点击“Flash” 即可
制作过程中出现的错误，格式化一律关闭取消
启动 Armbian U盘系统  拔掉电源 插上网线 插上HDMI线 插上U盘 插上键盘  👉 注意：U盘一定要插到靠近HDMI一侧的U口
插上电源进入线刷模式
启动 这种情况已经是正常启动
初次登录系统，输入账号：root回车，输入密码1234回车
出现这个命令行是需要改一下密码，再输入一遍现在的密码1234回车</description>
    </item>
    
    <item>
      <title>Windows&#34;新宠儿&#34;：Windows Terminal</title>
      <link>https://simonhux.com/p/windows%E6%96%B0%E5%AE%A0%E5%84%BFwindows-terminal/</link>
      <pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://simonhux.com/p/windows%E6%96%B0%E5%AE%A0%E5%84%BFwindows-terminal/</guid>
      <description>前言 Windows Terminal 是微软在2019年Build大会上宣布推出的全新开源终端应用，它带来了许多强大的特性，比如多标签页、Unicode 和 UTF-8 字符支持、GPU 加速文本渲染引擎与自定义主题、样式和配置等。
Windwos Terminal 采用 C++ 开发，基于现代 Windows 应用平台和 UI 框架，同时整合共享的现代化组件，这些共享组件可以在 Windows 任何终端上使用，比如有一个全新的基于 DirectWrite 的文本布局和渲染引擎、一个能够存储 UTF-16 和 UTF-8 的文本缓冲区以及一个 VT 解析器/发射器。
此外，Windows Terminal 渲染器和输入栈被构建成了可重用的 Windows UI 控件，方便其他开发者将其整合到他们自己的应用中。
Windows Terminal 项目经理 Kayla Cinnamon 在博客中介绍了终端的各种设置方法
安装 👉 注意：Windows Terminal需要Windows 10 1903（内部版本18362）或更高版本
cmd下输入winver可查看当前版本
打开windows自带的应用商店，搜索Windows Terminal，安装即可
使用 下载后可以在应用中找到，点击进入可以进入使用，默认开启的首页是Powershell
Windows Terminal可以在同一窗口代开多个标签页
个性化配置 每个标签页都可以任意配置应用，可以根据需要加入如anaconda，Git bash，ssh，Ubuntu等terminal，并且已有的terminal也可以根据喜好配置。
接下来进行DIY吧
点击选项卡旁边的下拉，会出现以下几个选项，选择settings将会打开profiles.json
用任意编辑器打开即可，如：Vs Code、Sublime Text、notepad++等等等甚至记事本都可以
配置文件可以对Windows Terminal进行各种属性的调整
 全局属性：位于 JSON 最外侧，包含有设置亮暗主题、默认 Profile 等项目的配置。 环境入口 profiles：一个列表，其中包含有 Windows Terminal 下拉菜单中唤起的各种环境（比如打开 PowerShell 环境、WSL 环境或 SSH 至远程服务器的环境……）与各种环境里 Windows Terminal 的显示方案（比如字体、背景、色彩方案等）。 配色主题 schemes：一个配色方案列表，其中包含有 Windows Terminal 在上一项「环境入口」中可以调用的「色彩主题」。 快捷键绑定 keybindings：自定义快捷键。  具体的每一种属性相关的信息，在Github官方库的SettingsSchema.</description>
    </item>
    
  </channel>
</rss>
